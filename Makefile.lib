# Определение компилятора C++ (GNU C++ Compiler)
CC = g++

CFLAGS = -Wall -Wextra -Werror -std=c++17
# Флаги компиляции:
# -Wall - включить все основные предупреждения
# -Wextra - дополнительные предупреждения
# -Werror - трактовать предупреждения как ошибки
# -std=c++17 - использовать стандарт C++17

LIB_NAME = libfraction.a
# Имя выходной статической библиотеки

OBJ = fraction.o
# Список объектных файлов для сборки библиотеки

compile: $(LIB_NAME)
# Основная цель по умолчанию - сборка библиотеки
# Зависит от успешного создания $(LIB_NAME)

$(LIB_NAME): $(OBJ)
	ar rcs $@ $^
# Правило для создания статической библиотеки:
# $@ - имя цели (libfraction.a)
# $^ - все зависимости (fraction.o)
# ar - утилита для работы с архивами
# r - заменить существующие файлы в архиве
# c - создать архив если не существует
# s - создать или обновить индекс

fraction.o: fraction.cpp fraction.h
	$(CC) $(CFLAGS) -c $< -o $@

# Правило компиляции объектного файла из исходного кода:
# $< - имя первого файла зависимости (fraction.cpp)
# -c - компилировать без линковки
# -o $@ - указать имя выходного файла (fraction.o)

clean:
	cmd /C "if exist $(OBJ) del $(OBJ)"
	cmd /C "if exist $(LIB_NAME) del $(LIB_NAME)"
# Цель для очистки сгенерированных файлов
# Использует команды cmd для Windows:
# Проверяет существование файлов перед удалением

# Объявление ложных целей, которые не соответствуют реальным файлам
.PHONY: compile clean